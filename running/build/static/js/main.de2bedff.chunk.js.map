{"version":3,"sources":["component/Navigation.jsx","component/Home.jsx","component/CheckoutForm.jsx","component/Cart.jsx","component/Order.jsx","component/auth/Register.jsx","component/auth/Login.jsx","App.js","serviceWorker.js","index.js"],"names":["Navigation","user","login","logout","Navbar","bg","expand","variant","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","to","Fragment","Link","firstname","lastname","onClick","Home","this","props","fetchItems","Row","Button","setFilterCategory","Container","fluid","items","map","item","Col","key","_id","md","Card","Img","src","picture","alt","name","Body","description","quantity","price","addItem","Component","CheckoutForm","useState","succeeded","setSucceeded","error","setError","processing","setProcessing","disabled","setDisabled","clientSecret","setClientSecret","stripe","useStripe","elements","useElements","useEffect","window","fetch","process","method","headers","localStorage","token","body","JSON","stringify","cart","total","then","res","json","data","handleChange","event","a","empty","message","handleSubmit","ev","preventDefault","confirmCardPayment","payment_method","card","getElement","CardElement","payload","paidStatus","onSubmit","options","style","base","color","fontFamily","fontSmoothing","fontSize","invalid","iconColor","onChange","role","Cart","promise","loadStripe","state","isCheckouted","isCheckouthandler","setState","prev","isPaidHandler","p","submitCart","console","log","totalPrice","length","reduce","b","lineitem","height","width","paymentStatus","Order","orders","Table","order","index","colSpan","Register","age","address","phone","password","changeHandler","e","target","value","registerHandler","register","Form","Control","type","placeholder","block","Login","loginHandler","URL","App","mounted","errorMessage","isAuth","logoutHandeler","removeItem","getUserProfile","Axios","get","catch","err","credentials","post","setItem","response","getItem","decode","Alert","path","exact","render","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.de2bedff.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Navigation({ user, login, logout }) {\r\n\treturn (\r\n\t\t<Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\">\r\n\t\t\t<Navbar.Brand href=\"/\">Shop that orders dont work :/</Navbar.Brand>\r\n\t\t\t<Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n\t\t\t<Navbar.Collapse id=\"basic-navbar-nav\">\r\n\t\t\t\t<Nav className=\"mr-auto\">\r\n\t\t\t\t\t<Link className=\"nav-link\" to=\"/\">\r\n\t\t\t\t\t\tHome\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<Link className=\"nav-link\" to=\"/cart\">\r\n\t\t\t\t\t\tCart\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<Link className=\"nav-link\" to=\"/order\">\r\n\t\t\t\t\t\tOrder\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</Nav>\r\n\r\n\t\t\t\t<Nav>\r\n\t\t\t\t\t{user ? (\r\n\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t<Nav.Link href=\"#user\">\r\n\t\t\t\t\t\t\t\t{user.firstname} {user.lastname}\r\n\t\t\t\t\t\t\t</Nav.Link>\r\n\t\t\t\t\t\t\t<Link to=\"/auth/logout\" onClick={logout} className=\"nav-link\">\r\n\t\t\t\t\t\t\t\tLogout\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t<Link to=\"/login\" onClick={login} className=\"nav-link\">\r\n\t\t\t\t\t\t\t\t\tLogin\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t<Link to=\"/register\" className=\"nav-link\">\r\n\t\t\t\t\t\t\t\t\tRegister\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t</Nav>\r\n\t\t\t</Navbar.Collapse>\r\n\t\t</Navbar>\r\n\t);\r\n}\r\n\r\nexport default Navigation;\r\n","import React, { Component } from 'react';\r\nimport { Container, Row, Card, Col, Button } from 'react-bootstrap';\r\n\r\nexport default class Home extends Component {\r\n\t// state = {\r\n\t// \t filtered: [],\r\n\t// \tcategory: '',\r\n\t// };\r\n\t// setFilterCategory = (filter) => {\r\n\t// \te.preventDefault();\r\n\t// \tconsole.log('filtered based on the category:', filter);\r\n\t// \tthis.setState({\r\n\t// \t\tcategory: e.target.value\r\n\t// \t});\r\n\t// };\r\n\t// filterBasedOnCategory = () => {\r\n\t// \tconst regex = this.state.category.toLowerCase();\r\n\t// \tlet filtered = this.props.items.filter(item => {\r\n\t// \t\treturn item.category.toLowerCase().match(regex, 'g')\r\n\t// \t}) \r\n\t//\tthis.setState({ filtered })\r\n\t// }\r\n\tcomponentDidMount() {\r\n\t\tthis.props.fetchItems();\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<h1>Home</h1>\r\n\t\t\t\t\t<Button className=\"m-3\" onClick={() => this.setFilterCategory('Vegetable')}>Vegetable</Button>\r\n\t\t\t\t\t<Button className=\"m-3\" onClick={() => this.setFilterCategory('Fruit')}>Fruit</Button>\r\n\t\t\t\t</Row>\r\n\r\n\t\t\t\t<Container fluid>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t{this.props.items.map((item) => (\r\n\t\t\t\t\t\t\t// {this.state.filtered.map((item) => (\r\n\t\t\t\t\t\t\t// if (this.state.category == item.category){\r\n\t\t\t\t\t\t\t<Col key={item._id} md=\"4\" className=\"mb-3\">\r\n\t\t\t\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t\t\t\t<Card.Img variant=\"top\" src={item.picture} alt={item.name} />\r\n\t\t\t\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<h2>{item.name}</h2>\r\n\t\t\t\t\t\t\t\t\t\t\t<div>Description: {item.description} </div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div>Quantity: {item.quantity}</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div>Price: {item.price} </div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"d-flex justify-content-center align-self-center\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.props.addItem(item)}\r\n\t\t\t\t\t\t\t\t\t\t\t\tid={item._id}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\tAdd to Cart\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Container>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n    CardElement,\r\n    useStripe,\r\n    useElements\r\n} from \"@stripe/react-stripe-js\";\r\n\r\nconst URL = process.env.REACT_APP_URL;\r\n\r\nexport default function CheckoutForm(props) {\r\n    const [succeeded, setSucceeded] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [processing, setProcessing] = useState('');\r\n    const [disabled, setDisabled] = useState(true);\r\n    const [clientSecret, setClientSecret] = useState('');\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n\r\n    useEffect(() => {\r\n        // Create PaymentIntent as soon as the page loads\r\n        window\r\n            .fetch(`${URL}/cart/create-payment-intent`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"x-auth-token\": localStorage.token\r\n                },\r\n                body: JSON.stringify({ items: props.cart, total: props.total })\r\n            })\r\n            .then(res => {\r\n                return res.json();\r\n            })\r\n            .then(data => {\r\n                setClientSecret(data.clientSecret);\r\n            });\r\n    }, [props.cart, props.total]);\r\n    const cardStyle = {\r\n        style: {\r\n            base: {\r\n                color: \"#32325d\",\r\n                fontFamily: 'Arial, sans-serif',\r\n                fontSmoothing: \"antialiased\",\r\n                fontSize: \"16px\",\r\n                \"::placeholder\": {\r\n                }\r\n            },\r\n            invalid: {\r\n                color: \"#fa755a\",\r\n                iconColor: \"#fa755a\"\r\n            }\r\n        }\r\n    };\r\n    const handleChange = async (event) => {\r\n        // Listen for changes in the CardElement\r\n        // and display any errors as the customer types their card details\r\n        setDisabled(event.empty);\r\n        setError(event.error ? event.error.message : \"\");\r\n    };\r\n    const handleSubmit = async ev => {\r\n        ev.preventDefault();\r\n        setProcessing(true);\r\n        const payload = await stripe.confirmCardPayment(clientSecret, {\r\n            payment_method: {\r\n                card: elements.getElement(CardElement)\r\n            }\r\n        });\r\n        if (payload.error) {\r\n            setError(`Payment failed ${payload.error.message}`);\r\n            setProcessing(false);\r\n        } else {\r\n            setError(null);\r\n            setProcessing(false);\r\n            setSucceeded(true);\r\n            //push the thing that set the state down to here.\r\n            //shifted the stuff here\r\n            props.paidStatus(true)\r\n\r\n\r\n            // }\r\n        }\r\n    };\r\n    return (\r\n        <form id=\"payment-form\" onSubmit={handleSubmit}>\r\n            <CardElement id=\"card-element\" options={cardStyle} onChange={handleChange} />\r\n            <button\r\n                disabled={processing || disabled || succeeded}\r\n                id=\"submit\"\r\n            >\r\n                <span id=\"button-text\">\r\n                    {processing ? (\r\n                        <div className=\"spinner\" id=\"spinner\"></div>\r\n                    ) : (\r\n                            \"Pay\"\r\n                        )}\r\n                </span>\r\n            </button>\r\n            {/* Show any error that happens when processing the payment */}\r\n            {error && (\r\n                <div className=\"card-error\" role=\"alert\">\r\n                    {error}\r\n                </div>\r\n            )}\r\n            {/* Show a success message upon completion */}\r\n            <p className={succeeded ? \"result-message\" : \"result-message hidden\"}>\r\n                Payment succeeded, see the result in your\r\n        <a\r\n                    href={`https://dashboard.stripe.com/test/payments`}\r\n                >\r\n                    Stripe dashboard.\r\n        </a> Refresh the page to pay again.\r\n      </p>\r\n        </form>\r\n    );\r\n}","import React, { Component } from 'react';\r\nimport { Container, Row, Card, Button } from 'react-bootstrap';\r\nimport CheckoutForm from './CheckoutForm';\r\n\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { Elements } from \"@stripe/react-stripe-js\";\r\n\r\n\r\nexport default class Cart extends Component {\r\n\r\n\tpromise = loadStripe(\"pk_test_51HL1OqENKFvZ9SFaQQVR6NKs2Rk2NkqKq2TJYwtUZDmD8qklZ1qBZuVfqg6OaqSPsaEK3bj1EzTOTWHSWYhYlbTy00SXjTC7NJ\")\r\n\r\n\tstate = {\r\n\t\tisCheckouted: false,\r\n\t\t// isPaid: false\r\n\t}\r\n\r\n\tisCheckouthandler = () => {\r\n\t\tthis.setState((prev) => ({ isCheckouted: !prev.isCheckouted }))\r\n\t}\r\n\r\n\tisPaidHandler = (p) => {\r\n\t\tif (p) {\r\n\t\t\tthis.props.submitCart(this.props.cart);\r\n\t\t\t// this.setState((prev) => ({ isPaid: p }))\r\n\t\t}\r\n\r\n\t}\r\n\tsubmitCart = (cart) => {\r\n\t\tthis.props.submitCart(cart);\r\n\t\tconsole.log(cart);\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tthis.props.fetchItems();\r\n\t}\r\n\trender() {\r\n\t\tconsole.log('this is cart.jsx', this.props.cart);\r\n\t\tlet totalPrice;\r\n\t\tif (this.props.cart.items.length > 0) {\r\n\t\t\ttotalPrice = this.props.cart.items\r\n\t\t\t\t.map(item => item.item.price * item.quantity)\r\n\t\t\t\t.reduce((a, b) => a + b);\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h1>Cart</h1>\r\n\t\t\t\t<Container fluid>\r\n\t\t\t\t\t{this.props.cart.items.map((lineitem) => (\r\n\t\t\t\t\t\t<Row key={\"item._id\"} className=\"mb-3\">\r\n\t\t\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t\t\t<Card.Img variant=\"top\" src={lineitem.item.picture} style={{ height: \"50%\", width: \"50%\" }} />\r\n\t\t\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<span> {lineitem.item.name}</span>\r\n\t\t\t\t\t\t\t\t\t\t<span>Price: {lineitem.item.price}</span>\r\n\t\t\t\t\t\t\t\t\t\t<span>Quantity: {lineitem.quantity}</span>\r\n\t\t\t\t\t\t\t\t\t\t<span>Total price: {lineitem.item.price * lineitem.quantity}</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t))}\r\n\t\t\t\t\t<h2>\r\n\t\t\t\t\t\tTotal: {totalPrice || \"\"}\r\n\t\t\t\t\t</h2>\r\n\t\t\t\t\t{/* <div>Total: {total}</div> */}\r\n\t\t\t\t\t<Button onClick={this.isCheckouthandler}>Checkout Stripe</Button>\r\n\t\t\t\t\t{/* <Button onClick={() => this.submitCart(this.props.cart)}>Checkout</Button> */}\r\n\t\t\t\t\t{this.state.isCheckouted && <Elements stripe={this.promise}><CheckoutForm paidStatus={this.isPaidHandler} cart={this.props.cart} total=\r\n\t\t\t\t\t\t{totalPrice} paymentStatus={this.state.paymentStatus} /></Elements>}\r\n\r\n\t\t\t\t</Container>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Container, Table } from 'react-bootstrap';\r\n\r\nexport default class Order extends Component {\r\n\trender() {\r\n\t\tconsole.log('this is order.jsx', this.props.orders);\r\n\t\treturn (\r\n\t\t\t<Container fluid>\r\n\t\t\t\t<h1>Orders</h1>\r\n\t\t\t\t<Table>\r\n\t\t\t\t\t{this.props.orders.map((order, index) => (\r\n\t\t\t\t\t\t<React.Fragment key={index}>\r\n\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<th>Order : {index + 1}</th>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<th>Items</th>\r\n\t\t\t\t\t\t\t\t\t<th>Price</th>\r\n\t\t\t\t\t\t\t\t\t<th>Quantity</th>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\torder.items.map((item, index) => (\r\n\t\t\t\t\t\t\t\t\t\t<tr key={index}>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>{item.item.name}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>{item.item.price}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>{item.quantity}</td>\r\n\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td colSpan=\"3\">\r\n\t\t\t\t\t\t\t\t\t\tOrder total: {\r\n\t\t\t\t\t\t\t\t\t\t\torder.items\r\n\t\t\t\t\t\t\t\t\t\t\t\t.map(item => (item.item.price * item.quantity))\r\n\t\t\t\t\t\t\t\t\t\t\t\t.reduce((a, b) => (a + b))\r\n\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Table>\r\n\t\t\t</Container>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Row, Container, Form, Button } from 'react-bootstrap';\r\n\r\n// const URL = process.env.REACT_APP_URL;\r\nexport default class Register extends Component {\r\n\tstate = {\r\n\t\tfirstname : '',\r\n\t\tlastname  : '',\r\n\t\tage       : '',\r\n\t\taddress   : '',\r\n\t\tphone     : '',\r\n\t\tpassword  : ''\r\n\t};\r\n\tchangeHandler = (e) => {\r\n\t\tthis.setState({ [e.target.name]: e.target.value });\r\n\t};\r\n\tregisterHandler = () => {\r\n\t\t//login here\r\n\t\tthis.props.register(this.state);\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h1>Register</h1>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Container>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\tname=\"firstname\"\r\n\t\t\t\t\t\t\t\ttype=\"firstname\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"firstname\"\r\n\t\t\t\t\t\t\t\tonChange={this.changeHandler}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\tname=\"lastname\"\r\n\t\t\t\t\t\t\t\ttype=\"lastname\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"lastname\"\r\n\t\t\t\t\t\t\t\tonChange={this.changeHandler}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Form.Control name=\"age\" type=\"age\" placeholder=\"age\" onChange={this.changeHandler} />\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\tname=\"address\"\r\n\t\t\t\t\t\t\t\ttype=\"address\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"address\"\r\n\t\t\t\t\t\t\t\tonChange={this.changeHandler}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Form.Control name=\"phone\" type=\"phone\" placeholder=\"phone\" onChange={this.changeHandler} />\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"password\"\r\n\t\t\t\t\t\t\t\tonChange={this.changeHandler}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t<Button variant=\"primary\" block onClick={this.registerHandler}>\r\n\t\t\t\t\t\t\tRegister\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Row, Container, Form, Button } from 'react-bootstrap';\r\n\r\n// const URL = process.env.REACT_APP_URL;\r\nexport default class Login extends Component {\r\n\tstate = {\r\n\t\tphone    : '',\r\n\t\tpassword : ''\r\n\t};\r\n\tchangeHandler = (e) => {\r\n\t\tthis.setState({ [e.target.name]: e.target.value });\r\n\t};\r\n\tloginHandler = () => {\r\n\t\tconsole.log(this.state);\r\n\t\t//login here\r\n\t\tthis.props.login(this.state);\r\n\t};\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h1>Login</h1>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Container>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\tname=\"phone\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Phone Number\"\r\n\t\t\t\t\t\t\t\ttype=\"phone\"\r\n\t\t\t\t\t\t\t\tonChange={this.changeHandler}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"password\"\r\n\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\tonChange={this.changeHandler}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t<Button variant=\"primary\" block onClick={this.loginHandler}>\r\n\t\t\t\t\t\t\tLogin\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Switch, BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\nimport Axios from 'axios';\nimport { decode } from 'jsonwebtoken';\nimport { Alert } from 'react-bootstrap';\n\nimport Navigation from './component/Navigation';\nimport Home from './component/Home';\nimport Cart from './component/Cart';\nimport Order from './component/Order';\nimport Register from './component/auth/Register';\nimport Login from './component/auth/Login';\n// import Success from './component/Success';\n// import CheckoutForm from './component/CheckoutForm';\n\n\nconst URL = process.env.REACT_APP_URL;\nclass App extends Component {\n\tmounted = true;\n\tstate = {\n\t\titems: [],\n\t\tcart: {\n\t\t\titems: []\n\t\t},\n\t\tpaymentStatus: false,\n\t\torders: [],\n\t\terrorMessage: null,\n\t\tisAuth: false,\n\t\tuser: null\n\t};\n\n\tlogoutHandeler = (e) => {\n\t\te.preventDefault();\n\t\tconsole.log('i logged out');\n\t\tthis.setState({\n\t\t\titems: [],\n\t\t\tcart: { items: [] },\n\t\t\torders: [],\n\t\t\terrorMessage: null,\n\t\t\tisAuth: false,\n\t\t\tuser: null\n\t\t});\n\t\tlocalStorage.removeItem('token');\n\t};\n\n\tgetUserProfile = (token) => {\n\t\tAxios.get(`${URL}/auth/user`, {\n\t\t\theaders: {\n\t\t\t\t'x-auth-token': token\n\t\t\t}\n\t\t})\n\t\t\t.then((res) => {\n\t\t\t\tconsole.log('from user data: ', res.data);\n\t\t\t\tthis.setState({\n\t\t\t\t\tisAuth: true,\n\t\t\t\t\tuser: res.data.user\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t\t// for safety, setAuth to false\n\t\t\t\t// this.setState({ isAuth: false, errorMessage: err.response.data.message });\n\t\t\t});\n\t};\n\tloginHandler = (credentials) => {\n\t\tconsole.log(credentials);\n\t\t//login here\n\t\tAxios.post(`${URL}/auth/login`, credentials)\n\t\t\t.then((res) => {\n\t\t\t\tconsole.log('Logged in');\n\t\t\t\tconsole.log(res.data);\n\n\t\t\t\t// take local storage and save the token\n\t\t\t\tlocalStorage.setItem('token', res.data.token);\n\t\t\t\t//get uptodate user information\n\t\t\t\tthis.getUserProfile(res.data.token);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log('not Logged in');\n\t\t\t\tconsole.log(err.response.data);\n\t\t\t\tconsole.log(err);\n\t\t\t\t// for safety, setAuth to false\n\t\t\t\tthis.setState({ isAuth: false, errorMessage: err.response.data.message });\n\t\t\t});\n\t};\n\tregisterHandler = (credentials) => {\n\t\t//Register here\n\t\tconsole.log(credentials);\n\t\tAxios.post(`${URL}/auth/register`, credentials)\n\t\t\t.then((res) => {\n\t\t\t\tconsole.log(res.data);\n\n\t\t\t\tlocalStorage.setItem('token', res.data.token);\n\t\t\t\tthis.setState({\n\t\t\t\t\tisAuth: true\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t\tconsole.log(err.res);\n\t\t\t\tthis.setState({\n\t\t\t\t\tisAuth: false\n\t\t\t\t});\n\t\t\t});\n\t};\n\taddItem = (item) => {\n\t\tlet token = localStorage.getItem('token');\n\t\tif (token) {\n\t\t\tAxios.post(\n\t\t\t\t`${URL}/cart/${item._id}/add`,\n\t\t\t\t{},\n\t\t\t\t{\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'x-auth-token': token\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t)\n\t\t\t\t.then((res) => {\n\t\t\t\t\tconsole.log('response: ', res);\n\t\t\t\t\t// let tempState = { ...this.state }; //copy of state\n\t\t\t\t\t// tempState.cart = res.data.cart;\n\t\t\t\t\t// console.log('temp cart', tempState);\n\t\t\t\t\t// this.state.cart.push(item);\n\t\t\t\t\t//set state\n\t\t\t\t\tthis.setState({ cart: res.data.cart });\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\t// console.log(err.response.data);\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t});\n\t\t} else {\n\t\t\tconsole.log('no token added');\n\t\t}\n\t};\n\n\tfetchItems = () => {\n\t\tlet token = localStorage.getItem('token');\n\t\tAxios.get(`${URL}/items`, {\n\t\t\t// as we saved the token under the header\n\t\t\theaders: {\n\t\t\t\t'x-auth-token': token\n\t\t\t}\n\t\t})\n\t\t\t.then((res) => {\n\t\t\t\tconsole.log(\"FETCHED\", res.data);\n\t\t\t\tthis.setState({ items: res.data.items ? res.data.items : [] });\n\t\t\t\tthis.setState({ cart: res.data.cart ? res.data.cart : { items: [] } });\n\t\t\t\tthis.setState({ orders: res.data.orders ? res.data.orders : [] });\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t};\n\n\tsubmitCart = (cart) => {\n\t\tconsole.log(cart);\n\t\tlet token = localStorage.getItem('token');\n\t\t// when i click this button, i want to submit cart. so the post url has to match the route that handles the change of cart to orders \n\t\t//to redirect user from cart to payment page\n\t\tthis.setState({ paymentStatus: true })\n\t\tAxios.post(`${URL}/cart/checkout`, cart, {\n\t\t\theaders: {\n\t\t\t\t'x-auth-token': token\n\t\t\t}\n\t\t})\n\t\t\t.then((res) => {\n\t\t\t\t// this.setState({ cart: []})\n\t\t\t\tconsole.log(res.data.order);\n\t\t\t\tthis.setState({\n\t\t\t\t\torders: [...this.state.orders, res.data.order],\n\t\t\t\t\tcart: { items: [] }\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t};\n\n\tcomponentDidMount() {\n\t\t// to tell the browser to remain logged in\n\t\tlet token = localStorage.getItem('token');\n\t\tif (!(token == null)) {\n\t\t\tlet decodedToken = decode(token);\n\t\t\tif (!decodedToken) {\n\t\t\t\t//if the toke is invalid, we remove it\n\t\t\t\tlocalStorage.removeItem('token');\n\t\t\t} else {\n\t\t\t\tthis.getUserProfile(token);\n\t\t\t\t// this.setState({ isAuth: true });\n\t\t\t}\n\t\t}\n\t}\n\trender() {\n\t\tlet { isAuth, user, errorMessage } = this.state;\n\t\tconsole.log('current state:', this.state);\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Router>\n\t\t\t\t\t{/* <Navigation user={user} /> */}\n\t\t\t\t\t<Navigation user={user} logout={this.logoutHandeler} login={this.loginHandler} />\n\t\t\t\t\t{errorMessage && <Alert>{errorMessage}</Alert>}\n\t\t\t\t\t{/* the error messages are the error we wrote in the api files */}\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t{/* allow user to view items on page without logging in */}\n\t\t\t\t\t\t{/* if no need to pass data, can use component */}\n\t\t\t\t\t\t{/* <Route exact path=\"/\" component={Home} /> */}\n\t\t\t\t\t\t{/* if need to pass data e.g.props, use render */}\n\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\tpath=\"/\"\n\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\trender={() => (\n\t\t\t\t\t\t\t\t<Home\n\t\t\t\t\t\t\t\t\titems={this.state.items}\n\t\t\t\t\t\t\t\t\tcart={this.state.cart}\n\t\t\t\t\t\t\t\t\taddItem={this.addItem}\n\t\t\t\t\t\t\t\t\tfetchItems={this.fetchItems}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{/*tbc if shopper and customer are using the same pages*/}\n\t\t\t\t\t\t{/* exact so that item/add wont confuse with the item/:id  */}\n\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\tpath=\"/cart\"\n\t\t\t\t\t\t\t// paymentStatus ? render={() => (<Success/>)} \n\t\t\t\t\t\t\t// : render={() => <Cart cart={this.state.cart} fetchItems={this.fetchItems} submitCart={this.submitCart} paymentStatus={this.state.paymentStatus} />}\n\t\t\t\t\t\t\trender={() => <Cart cart={this.state.cart} fetchItems={this.fetchItems} submitCart={this.submitCart} paymentStatus={this.state.paymentStatus} />}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{/* <PrivateRoute exact path=\"/cart\" isAuth={isAuth} render={() => <Cart />} /> */}\n\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\tpath=\"/order\"\n\t\t\t\t\t\t\trender={() => (\n\t\t\t\t\t\t\t\t<Order\n\t\t\t\t\t\t\t\t\torders={this.state.orders}\n\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{/* <PrivateRoute exact path=\"/order\" isAuth={isAuth} render={() => <Order />} /> */}\n\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\tpath=\"/register\"\n\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\trender={() => (isAuth ? <Redirect to=\"/\" /> : <Register register={this.registerHandler} />)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{/* check if user is auth, if yes redirect to / */}\n\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\tpath=\"/login\"\n\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\trender={() => (isAuth ? <Redirect to=\"/\" /> : <Login login={this.loginHandler} />)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Switch>\n\t\t\t\t</Router>\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default App;\n\n// at / => see all items\n// at /cart => cart (protected)\n// at /orders => see all previous orders (protected)\n\n// /register\n\n// /login","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}